@model FUMETTERIA_CAP2._0.Models.Ordine

@{
    ViewBag.Title = "Edit";
}

<h2 class="text-center">AGGIORNA LO STATO DELL'ORDINE'</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal d-flex justify-content-around">
    
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.IDordine)

    @Html.HiddenFor(model => model.data)
    <div class="form-group">
        @Html.LabelFor(model => model.isSpedito, htmlAttributes: new { @class = "control-label col-md-2 bold-text" })
        <div class="col-md-10">
            <div class="checkbox bold-text">
                @Html.EditorFor(model => model.isSpedito)
                @Html.ValidationMessageFor(model => model.isSpedito, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group ">
        @Html.LabelFor(model => model.isConcluso, htmlAttributes: new { @class = "control-label col-md-2 bold-text" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.isConcluso)
                @Html.ValidationMessageFor(model => model.isConcluso, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.indirizzo, htmlAttributes: new { @class = "control-label col-md-2 bold-text" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.indirizzo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.indirizzo, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.importo, htmlAttributes: new { @class = "control-label col-md-2 bold-text" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.importo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.importo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.HiddenFor(model => model.IdUser, htmlAttributes: new { @class = "form-control" })
    </div>
</div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="aggiorna l'ordine" class="btn btn-primary bold-text" />

        </div>
    </div>
}

<div>
    @Html.ActionLink("ritorna alla lista degli ordini", "Index",null, new { @class = "text-primary bold-text " })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
